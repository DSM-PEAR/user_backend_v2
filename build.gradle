buildscript {
	repositories { jcenter() }
	dependencies {
	}
}

plugins {
	id 'org.springframework.boot' version '2.4.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
}

apply plugin: "io.spring.dependency-management"

group = 'com.dsm-pear'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {

	// spring boot starter
	implementation 'org.springframework.boot:spring-boot-starter'

	// spring boot starter web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// spring boot starter app
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	// spring mail
	implementation "org.springframework.boot:spring-boot-starter-mail"

	// spring security
	implementation "org.springframework.boot:spring-boot-starter-security"

	// Database
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	runtimeOnly 'mysql:mysql-connector-java'
	testImplementation 'com.h2database:h2'

	// redis
	implementation "org.springframework.boot:spring-boot-starter-data-redis"
	implementation "it.ozimov:embedded-redis:0.7.2"

	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	compileOnly "org.mapstruct:mapstruct:1.4.0.Final", "org.projectlombok:lombok:1.18.8"
	annotationProcessor "org.mapstruct:mapstruct-processor:1.4.0.Final", "org.projectlombok:lombok:1.18.8"

	// validation (For using @Valid Annotation)
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// jackson (JSON Object)
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.2'

	// junit (Test Code)
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
	testCompile("org.mockito:mockito-all:1.10.19")

	// querydsl
	implementation "com.querydsl:querydsl-jpa"
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
	annotationProcessor("jakarta.annotation:jakarta.annotation-api")
	annotationProcessor("jakarta.persistence:jakarta.persistence-api")

}

test {
	useJUnitPlatform()
}

def generated='src/main/generated'
sourceSets {
	main.java.srcDirs += [ generated ]
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

clean.doLast {
	file(generated).deleteDir()
}


test {
	useJUnitPlatform()
}

jacocoTestReport {
	reports {
		xml.enabled true
		xml.destination file("${buildDir}/reports/jacoco/report.xml")
		html.enabled true
		csv.enabled false
	}
}
